{"version":3,"sources":["events.js"],"names":["elGridView","elListView","list","jsondata","body","document","querySelector","modal","modalContent","modalCloseBtn","urlParams","URLSearchParams","window","location","search","_init","xhr","action","data","XMLHttpRequest","xhrUrl","onreadystatechange","readyState","DONE","responseData","JSON","parse","responseText","status","undefined","message","showModal","classList","contains","item","li","createElement","setAttribute","id","add","appendChild","innerHTML","picture","name","email","loader","fillProfileOverview","has","birthday","address","bio","fillProfilePage","parseInt","get","open","isNaN","send","show","remove","content","hideclosebtn","addEventListener","e","preventDefault","confirmBtn","cancelBtn","encodeURIComponent","value","modalShow"],"mappings":"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","file":"build.js","sourcesContent":["'use strict';\n\nvar jsondata = [],\n    elGridView,\n    elListView,\n    list,\n    body = document.querySelector('body'),\n    modal = document.querySelector('.modal'),\n    modalContent = document.querySelector('.modal-content'),\n    modalCloseBtn = document.querySelector('.js-close-button'),\n    urlParams = new URLSearchParams(window.location.search);\n\n// Check if document is ready and runs the _init function\ndocument.addEventListener('DOMContentLoaded', _init, false);\n\n/**\n * The init functions contains all other functions and events, so that they are all available for eachother\n */\n\nfunction _init() {\n    /**\n     * @function xhr\n     * Opens an XHR request to the backend.\n     * The backend runs on my personal website, which is defined in @var xhrUrl\n     * The backend code is available on https://github.com/timoerlemans/Project-manager_DB\n     * It requires a webserver with PHP.\n     *\n     * @param {String} action - can be either 'read', 'remove' or 'write'. When left empty, it will default to 'read'\n     * @param {any} data - the data that will be send to the backend\n     */\n    function xhr(action, data) {\n        var xhr = new XMLHttpRequest();\n        var xhrUrl = 'http://www.timoerlemans.nl/xhr/xhr.php';\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                var responseData = JSON.parse(xhr.responseText);\n                if (\n                    responseData.status === 'fail' ||\n                    responseData.status === 'error' ||\n                    responseData.message !== undefined\n                ) {\n                    showModal(true, responseData.message, true);\n                } else {\n                    var jsondata = responseData.data;\n                    if (body.classList.contains('overview-page')) {\n                        fillProfileOverview(jsondata);\n                    } else if (body.classList.contains('profile-page')) {\n                        /**\n                         * Using the relatively new urlSearchParams API to determine if the query string id is set (this doesn't work in IE)\n                         * @var urlParams = new URLSearchParams(window.location.search);\n                         */\n\n                        if (urlParams.has('id')) {\n                            fillProfilePage(\n                                jsondata,\n                                parseInt(urlParams.get('id'))\n                            );\n                        } else {\n                            showModal(\n                                true,\n                                '<p>Er is geen profielID gevonden, profiel kan niet weergegeven worden. <a href=\"/\">Ga terug naar het overzicht</a>.</p>',\n                                true\n                            );\n                            loader();\n                        }\n                    } else if (body.classList.contains('create-profile')) {\n                        loader();\n                    }\n                }\n            }\n        };\n\n        if (!action || action === 'read') {\n            xhr.open('GET', xhrUrl + '?type=read', true);\n        }\n        if (action === 'remove' && !isNaN(parseInt(data))) {\n            xhr.open('GET', xhrUrl + '?type=remove&id=' + data, true);\n        }\n        if (action === 'write') {\n            xhr.open('GET', xhrUrl + '?type=write&' + data, true);\n        }\n        xhr.send(null);\n    }\n\n    /**\n     * @function fillProfileOverview\n     *\n     * Is used to populate the profile overview page (index.html)\n     *\n     * @param {Array} data - an array of objects\n     */\n    function fillProfileOverview(data) {\n        for (var item in data) {\n            var li = document.createElement('li');\n            li.setAttribute('id', data[item].id);\n            li.classList.add('profiles-list__item');\n            list.appendChild(li);\n            li.innerHTML =\n                '<a href=\"/profile.html?id=' +\n                data[item].id +\n                '\" class=\"profiles-list__preview\"><img class=\"profiles-list__img\" src=\"' +\n                data[item].picture +\n                '\"><span class=\"profiles-list__name\">' +\n                data[item].name +\n                '</span><span class=\"profiles-list__email\">' +\n                data[item].email +\n                '</span></a>';\n        }\n        loader(false);\n    }\n\n    /**\n     * @function fillProfilePage\n     *\n     * Is used to populate the profile page (profile.html)\n     *\n     * @param {Array} data - an array of objects\n     * @param {Int} id - The id of the profile\n     */\n    function fillProfilePage(data, id) {\n        for (var item in data) {\n            if (data[item].id === id) {\n                document\n                    .querySelector('.js-profile-img')\n                    .setAttribute('src', data[item].picture);\n                document.querySelector('.js-profile-name').innerHTML =\n                    data[item].name;\n                document.querySelector('.js-profile-birthday').innerHTML =\n                    data[item].birthday;\n                document.querySelector('.js-profile-email').innerHTML =\n                    data[item].email;\n                document.querySelector('.js-profile-address').innerHTML =\n                    data[item].address;\n                document.querySelector('.js-profile-bio').innerHTML =\n                    data[item].bio;\n                loader();\n            }\n        }\n    }\n\n    /**\n     * @function loader\n     *\n     * Used to show or hide the loader icon\n     *\n     * @param {bool} show - true shows the loader, false hides it\n     */\n    function loader(show) {\n        if (show) {\n            document.querySelector('.loader').classList.remove('hidden');\n        } else {\n            document.querySelector('.loader').classList.add('hidden');\n        }\n    }\n\n    /**\n     * @function showModal\n     *\n     * Function to show or hide, and populate the modal\n     *\n     * @param {bool} show - Used to show or hide the modal\n     * @param {string} content - Used to populate the content of the modal with (may contain HTML-code)\n     * @param {bool} hideclosebtn - If true, hides the modal close button so it can't be closed\n     */\n    function showModal(show, content, hideclosebtn) {\n        if (show) {\n            modalContent.innerHTML = content;\n            modal.classList.add('open');\n        } else {\n            modal.classList.remove('open');\n            modalContent.innerHTML = '';\n        }\n        if (!hideclosebtn) {\n            modalCloseBtn.classList.remove('hidden');\n            modal.classList.remove('hide-all');\n        } else {\n            modalCloseBtn.classList.add('hidden');\n            modal.classList.add('hide-all');\n        }\n    }\n\n    /**\n     * @function modalEvtList\n     *\n     * Adds event listeners when the modal is populated with buttons\n     *\n     */\n    function modalEvtLst() {\n        var confirmBtn = document.querySelector('.js-confirm-remove');\n        var cancelBtn = document.querySelector('.js-cancel-remove');\n        confirmBtn.addEventListener('click', function(e) {\n            xhr('remove', urlParams.get('id'));\n            loader(true);\n            showModal(false);\n        });\n        cancelBtn.addEventListener('click', function(e) {\n            showModal(false);\n        });\n    }\n\n    /**\n     * @function createProfile\n     *\n     * Used to send form data to the backend to create a new profile\n     * Is fired on submitting the form in create.html\n     *\n     */\n    function createProfile() {\n        var submitData =\n            'name=' +\n            encodeURIComponent(document.querySelector('#name').value) +\n            '&birthday=' +\n            encodeURIComponent(document.querySelector('#birthday').value) +\n            '&email=' +\n            encodeURIComponent(document.querySelector('#emailaddress').value) +\n            '&address=' +\n            encodeURIComponent(document.querySelector('#address').value) +\n            '&bio=' +\n            encodeURIComponent(document.querySelector('#bio').value) +\n            '&picture=' +\n            encodeURIComponent(document.querySelector('#picture').value);\n        xhr('write', submitData);\n    }\n\n    // End of function declarations\n\n    // Events and eventlisteners are defined herafter\n\n    xhr();\n\n    if (body.classList.contains('overview-page')) {\n        elGridView = document.querySelector('.js-grid-view');\n        elListView = document.querySelector('.js-list-view');\n        list = document.querySelector('.profiles__list');\n\n        elGridView.addEventListener('click', function(e) {\n            e.preventDefault();\n            list.classList.add('profiles__list--grid');\n        });\n        elListView.addEventListener('click', function(e) {\n            e.preventDefault();\n            list.classList.remove('profiles__list--grid');\n        });\n    }\n    if (body.classList.contains('profile-page')) {\n        var removeBtn = document.querySelector('.js-remove-profile');\n        removeBtn.addEventListener('click', function(e) {\n            showModal(\n                true,\n                '<p>Weet je zeker dat je dit profiel wilt verwijderen?</p><button type=\"button\" class=\"js-confirm-remove\">Heel zeker</button><button type=\"button\" class=\"js-cancel-remove\">Niet zo zeker</button>'\n            );\n            modalEvtLst();\n        });\n    }\n\n    if (body.classList.contains('create-profile')) {\n        var createForm = document.querySelector('.js-create-profile');\n        createForm.addEventListener('submit', function(e) {\n            e.preventDefault();\n            loader(true);\n            createProfile();\n        });\n    }\n\n    modalCloseBtn.addEventListener('click', function(e) {\n        modalShow(false);\n    });\n}\n"]}